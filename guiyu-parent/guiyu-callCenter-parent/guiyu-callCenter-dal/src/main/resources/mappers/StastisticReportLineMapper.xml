<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guiji.callcenter.dao.StastisticReportLineMapper" >


  <select id="getLineMonitorReportByLineId" resultType="java.util.Map">

    select a.lineId,a.answerNum,a.totalNum,a.low,a.high,b.rate,a.history,
    '一般' as status,c.sip_ip,c.sip_port
    from
    (
      select
      line_id as lineId,
      sum(answer_num) as answerNum,
      sum(total_num) as totalNum,
      min(rate) as low,
      max(rate) as high,
      avg(rate) as history,
      max(create_time) as createTime
      from
      report_line_status
      where
      line_id = #{lineId}
      and create_time >=#{startTime}
      group by line_id
    )a,report_line_status b,line_info c
    where a.lineId = b.line_id and a.createTime = b.create_time and a.lineId = c.line_id
  </select>


  <select id="getLineMonitorReportByUserId" resultType="java.util.Map">

    select a.lineId,a.answerNum,a.totalNum,a.low,a.high,a.history,
    b.rate,'一般' as status,c.sip_ip,c.sip_port
    from
    (
    select
    m.line_id as lineId,
    sum(m.answer_num) as answerNum,
    sum(m.total_num) as totalNum,
    min(m.rate) as low,
    max(m.rate) as high,
    avg(m.rate) as history,
    max(m.create_time) as createTime
    from
    report_line_status m,line_info n
    where
    m.line_id = n.line_id
    and n.customer_id = #{userId}
    and m.create_time >=#{startTime}
    group by m.line_id
    )a,report_line_status b,line_info c
    where a.lineId = b.line_id and a.createTime = b.create_time and a.lineId = c.line_id
  </select>

  <select id="getLineHangupCodeOverView" resultType="java.util.Map">

    select
    sum(answer_calls) as answeredCalls,
    sum(total_calls) as totalCalls,
    sum(is_cancel) as cancelledCalls,
    sum(answer_calls)/sum(total_calls) as answerRate,
    sum(is_cancel)/sum(total_calls) as cancelledRate,
    sum(total_calls) - sum(answer_calls) - sum(is_cancel) as othersCalls
    from report_line_code
    where
    line_id = #{lineId}
    and create_time >=#{startTime}
    <if test="enTime != null" >
      and create_time &lt;= #{enTime}
    </if>

  </select>

  <select id="getLineHangupCodeErrorSum" resultType="java.util.Map">

    select
    hangup_code,
    sum(total_calls) as totalCalls
    from report_line_code
    where
    line_id = #{lineId}
    and create_time >=#{startTime}
    <if test="enTime != null" >
      and create_time &lt;= #{enTime}
    </if>
    and hangup_code is not null
    group by hangup_code

  </select>

  <select id="getLineHangupCodeErrorNums" resultType="java.util.Map">

    select
    hangup_code as error,
    group_concat(phone_num) as num
    from report_line_code
    where
    line_id = #{lineId}
    and create_time >=#{startTime}
    <if test="enTime != null" >
      and create_time &lt;= #{enTime}
    </if>
    and hangup_code is not null
    group by hangup_code
  </select>

  <select id="getLineHangupCodeErrorNumsCancel" resultType="java.util.Map">
    select
    '超时' as error,
    group_concat(phone_num) as num
    from report_line_code
    where
    line_id = #{lineId}
    and create_time >=#{startTime}
    <if test="enTime != null" >
      and create_time &lt;= #{enTime}
    </if>
    and  is_cancel = 1

  </select>

  <delete id="deleteReportLineCode">
    delete from report_line_code
    WHERE
    create_time = #{createTime}
  </delete>
  <delete id="deleteReportLineStatus">
    delete from report_line_status
    WHERE
    create_time = #{createTime}
  </delete>

  <select id="selectLineHangupCodeReport" resultType="com.guiji.callcenter.dao.entity.ReportLineCode">
    SELECT
    hangup_code AS hangupCode,
    line_id AS lineId,
    SUM(is_cancel) AS isCancel,
    COUNT(call_id) AS totalCalls,
    <!--ADDDATE(min(create_time),INTERVAL -MINUTE(min(create_time)) % 5 MINUTE) AS createTime,-->
    GROUP_CONCAT(phone_num) AS phoneNum,
    SUM(is_answer) AS answerCalls

    FROM
    call_out_plan
    WHERE
    <!--create_time >= #{startTime}-->
    <!--AND create_time &lt;  #{enTime}-->
    <!--AND-->
    call_state>6

    GROUP BY hangup_code,line_id,is_cancel
  </select>

  <insert id="insertReportLineCodeBatch" parameterType="java.util.List">
    INSERT INTO  report_line_code (
    create_time,line_id,hangup_code,is_cancel,total_calls,answer_calls,phone_num)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.createTime}, #{item.lineId}, #{item.hangupCode},
      #{item.isCancel}, #{item.totalCalls}, #{item.answerCalls},
      #{item.phoneNum}
      )
    </foreach>
  </insert>

  <select id="selectReportLineStatusFromCode" resultType="com.guiji.callcenter.dao.entity.ReportLineStatus">
    SELECT
    line_id as lineId,
    sum(total_calls) as totalNum,
    sum(answer_calls) as answerNum,
    sum(answer_calls)/sum(total_calls) as rate,
    create_time as createTime
    FROM
    report_line_code
    WHERE
    create_time = #{createTime}
    GROUP BY line_id
  </select>

  <insert id="insertReportLineStatusBatch" parameterType="java.util.List">
    INSERT INTO  report_line_status (
    line_id,answer_num,total_num,rate,create_time)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.lineId}, #{item.answerNum}, #{item.totalNum},
      #{item.rate}, #{item.createTime}
      )
    </foreach>
  </insert>
</mapper>